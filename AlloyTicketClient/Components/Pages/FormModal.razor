@* Modal dialog for form actions (all pages as sections) *@
@using AlloyTicketClient.Components.Fields
@using AlloyTicketClient.Models
@using AlloyTicketClient.Enums
@using AlloyTicketClient.Services

@if (Show)
{
    <div class="modal-overlay" @onclick="HandleOverlayClick">
        <div class="modal-dialog" @onclick:stopPropagation>
            <div class="modal-header">
                <h2>@Title</h2>
                <button class="modal-close" @onclick="HandleClose">&times;</button>
            </div>
            <div class="modal-content">
                @if (isLoading)
                {
                    <div class="modern-loading">
                        <div class="modern-spinner"></div>
                        <span>Loading, please wait...</span>
                    </div>
                }
                else if (pages != null && pages.Count > 0)
                {
                    @foreach (var p in pages.Where(pg => !pg.IsHidden))
                    {
                        <div class="form-page">
                            <h3>@p.PageName</h3>
                            @foreach (var row in GetFieldRows(p.Items))
                            {
                                <div class="form-row">
                                    @foreach (var item in row)
                                    {
                                        if (item is FieldInputDto fieldInput)
                                        {
                                            var fieldKey = fieldInput.DefinitionID?.ToString();
                                            if (!fieldInput.IsHidden)
                                            {
                                                var isTextarea = fieldInput.FieldType == FieldType.Memo;
                                                <div class="form-col@(isTextarea ? " textarea-col" : "")">
                                                    <FieldInput @key="fieldInput.DefinitionID"
                                                                Field="@(FormDataMapperService.MapToFormFieldDto(fieldInput))"
                                                                Value="@(fieldValues.ContainsKey(fieldKey) ? fieldValues[fieldKey]?.ToString() : null)"
                                                                OnValueChanged="@(val => OnFieldValueChanged(val, fieldKey))" />
                                                </div>
                                            }
                                        }
                                        else if (item is FieldTextDto fieldText)
                                        {
                                            <div class="form-col field-text">@FormDataMapperService.GetTextValue(fieldText.ElementDefinition)</div>
                                        }
                                        else if (item is AttachmentInputDto attachment)
                                        {
                                            var attachmentKey = $"attachment_{pages.IndexOf(p)}_{p.Items.IndexOf(item)}";
                                            <div class="form-col">
                                                <InputFile class="form-control" OnChange="e => OnAttachmentChanged(e, attachmentKey)" />
                                            </div>
                                        }
                                    }
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <p>No fields found for this form.</p>
                }
            </div>
            <div class="modal-footer" style="display: flex; justify-content: flex-end; align-items: center; gap: 1rem;">
                @if (!isLoading && pages != null && pages.Count > 0)
                {
                    <button class="btn btn-primary @( (!AreAllRequiredFieldsFilled() || isSubmitting) ? "disabled-blue" : null )"
                            @onclick="SubmitForm"
                            style="min-width: 100px; display: flex; align-items: center; justify-content: center; gap: 0.5rem;"
                            disabled="@((!AreAllRequiredFieldsFilled() || isSubmitting) ? true : null)">
                        @if (isSubmitting)
                        {
                            <span>Submitting</span>
                            <span class="modern-spinner" style="width: 1.25rem; height: 1.25rem; border-width: 2.5px;"></span>
                        }
                        else
                        {
                            <span>Submit</span>
                        }
                    </button>
                }
            </div>
        </div>
    </div>
}
@if (showCancelConfirm)
{
    <CancelConfirmModal OnConfirm="ConfirmCancel" OnCancel="CancelCancel" />
}
