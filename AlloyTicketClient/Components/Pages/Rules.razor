@page "/rules"
@rendermode InteractiveServer

@using AlloyTicketClient.Models
@using AlloyTicketClient.Services
@using AlloyTicketClient.Enums

<PageTitle>Rules</PageTitle>

<div class="main-center-viewport">
    <div class="request-setup-container">
        <div class="d-flex justify-content-between align-items-center mb-2">
            <h1 class="request-setup-title mb-0">Rules</h1>
            <button class="btn btn-primary" @onclick="async () => await OpenRuleModal(null)">
                <i class="bi bi-plus-lg"></i> Add Rule
            </button>
        </div>
        <div class="request-setup-subtitle">Manage rules for each request type below.</div>

        @if (RulesList.Any())
        {
            <div class="rules-list-section mt-4">
                @foreach (var group in RulesList.GroupBy(r => r.FormId))
                {
                    var formName = Forms.FirstOrDefault(f => f.FormId == group.Key)?.Name ?? group.First().FormName ?? group.Key.ToString();
                    <div class="rules-group mb-4 p-3 border rounded bg-light">
                        <h5 class="mb-3">@formName <span style="font-size:small;color:gray">(FormId: @group.Key)</span></h5>
                        <table class="table table-sm table-bordered mb-0">
                            <thead>
                                <tr>
                                    <th>Trigger Field</th>
                                    <th>Trigger Value</th>
                                    <th>Action</th>
                                    <th>Target Fields</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var rule in group)
                                {
                                    <tr>
                                        <td>@rule.TriggerFieldLabel</td>
                                        <td>@(string.IsNullOrWhiteSpace(rule.TriggerValue) ? "Any" : rule.TriggerValue)</td>
                                        <td>@rule.Action</td>
                                        <td>@string.Join(", ", rule.TargetFieldLabels ?? rule.TargetList.Select(t => t.FieldName))</td>
                                        <td class="text-nowrap">
                                            <div class="d-flex flex-row gap-1 justify-content-center align-items-center">
                                                <button class="btn btn-primary btn-sm d-flex align-items-center justify-content-center" @onclick="async () => await OpenRuleModal(rule)" title="Edit">
                                                    Edit
                                                </button>
                                                <button class="btn btn-danger btn-sm d-flex align-items-center justify-content-center" @onclick="() => DeleteRule(rule)" title="Delete">
                                                    Delete
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        }

        @if (ShowRuleModal)
        {
            <div class="modal-backdrop fade show"></div>
            <div class="modal d-block rules-modal-bg" tabindex="-1">
                <div class="modal-dialog modal-lg modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">@(IsEditMode ? "Edit Rule" : "Add Rule")</h5>
                            <button type="button" class="btn-close" @onclick="CloseRuleModal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="container-fluid">
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Request (Form)</label>
                                        <select class="form-select" @onchange="OnModalFormSelected" value="@ModalSelectedFormId" disabled="@IsEditMode">
                                            <option value="">-- Select a Request --</option>
                                            @foreach (var form in Forms)
                                            {
                                                <option value="@form.FormId">@form.Name</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Action</label>
                                        <select class="form-select" @bind="ModalSelectedAction">
                                            <option value="Hide">Hide</option>
                                            <option value="Show">Show</option>
                                            <option value="ModifyApps">Modify Apps</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Trigger Field</label>
                                        <select class="form-select" @bind="ModalSelectedFieldId">
                                            <option value="">-- Select Trigger Field --</option>
                                            @foreach (var field in ModalFormFields)
                                            {
                                                <option value="@field.DefinitionID">@(string.IsNullOrEmpty(field.FieldLabel) ? field.FieldName : field.FieldLabel)</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Trigger Value <span class="text-muted" style="font-size:smaller">(leave blank for any value)</span></label>
                                        <input class="form-control" @bind="ModalTriggerValue" placeholder="Any value" />
                                    </div>
                                    <div class="col-12">
                                        <label class="form-label">Target Fields</label>
                                        <select class="form-select w-100" multiple size="6" style="height:auto;min-height:120px;" @onchange="OnModalTargetFieldsChanged">
                                            @foreach (var field in ModalFormFields)
                                            {
                                                <option value="@field.DefinitionID" selected="@ModalSelectedTargetFieldIds.Contains(field.DefinitionID?.ToString())">@(string.IsNullOrEmpty(field.FieldLabel) ? field.FieldName : field.FieldLabel)</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-secondary" @onclick="CloseRuleModal">Cancel</button>
                            <button class="btn btn-primary" @onclick="SaveRuleFromModal" disabled="@(!CanAddRuleFromModal)">@(IsEditMode ? "Save Changes" : "Add Rule")</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>