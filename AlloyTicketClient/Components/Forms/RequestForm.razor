@using AlloyTicketClient.Components.Fields
@using AlloyTicketClient.Enums
@using AlloyTicketClient.Models
@using AlloyTicketClient.Models.DTOs
@using AlloyTicketClient.Services
@using AlloyTicketClient.Components.Forms

<Toast Message="@toastMessage" Type="@toastType" Show="@showToast" OnHide="HideToastAsync" />

@if (Show)
{
    if (isSubmitting)
    {
        <div class="modal-overlay" style="z-index:10001; background:rgba(255,255,255,0.7)">
            <div class="modern-loading">
                <div class="modern-spinner"></div>
                <span>Submitting, please wait...</span>
            </div>
        </div>
    }
    <div class="modal-overlay" @onclick="HandleOverlayClick">
        <div class="modal-dialog" @onclick:stopPropagation>
            <div class="modal-header modal-header-flex">
                <h2>@Title</h2>
                <button class="modal-close" @onclick="HandleClose">&times;</button>
            </div>
            <div class="modal-content modal-content-flex">
                @if (isLoading)
                {
                    <div class="modern-loading">
                        <div class="modern-spinner"></div>
                        <span>Loading, please wait...</span>
                    </div>
                }
                else if (pages != null && pages.Count > 0)
                {
                    <EditForm Model="fieldValues" OnValidSubmit="SubmitFormAsync" class="edit-form-flex h-100">
                        <DataAnnotationsValidator />
                        <div class="field-content field-content-scroll">
                            @foreach (var p in pages.Where(pg => !pg.IsHidden))
                            {
                                <div class="form-page">
                                    <h3>@p.PageName</h3>
                                    @foreach (var row in GetFieldRows(p.Items.Where(i => !(i is FieldInputDto fi && fi.FieldName == "Requester_ID")).ToList()))
                                    {
                                        var isFullWidthRow =
                                        (row.Count == 1 && row[0] is FieldInputDto fieldInputDto && fieldInputDto.FieldType == FieldType.Memo)
                                        || (row.Count == 1 && row[0] is FieldTextDto)
                                        || RowNeedsFullWidth(row);
                                        var isSingleInputRow = row.Count == 1 && row[0] is FieldInputDto singleInput && singleInput.FieldType != FieldType.Memo;
                                        <div class="form-row@(isFullWidthRow ? " full-width-row" : "")">
                                            @foreach (var item in row)
                                            {
                                                if (item is FieldInputDto fieldInput)
                                                {
                                                    var fieldKey = fieldInput.DefinitionID?.ToString();
                                                    if (!fieldInput.IsHidden)
                                                    {
                                                        var isTextarea = fieldInput.FieldType == FieldType.Memo;
                                                        var formColClass = "form-col" + (isTextarea ? " textarea-col" : "") + (isSingleInputRow ? " single-col" : "");
                                                        <div class="@formColClass">
                                                            <FieldInput @key="fieldInput.DefinitionID"
                                                                        Field="@(FormDataMapperService.MapToFormFieldDto(fieldInput))"
                                                                        Value="@(fieldValues.ContainsKey(fieldKey) ? fieldValues[fieldKey]?.ToString() : null)"
                                                                        OnValueChanged="@(val => OnFieldValueChanged(val, fieldKey))" />
                                                        </div>
                                                    }
                                                }
                                                else if (item is FieldTextDto fieldText)
                                                {
                                                    <div class="form-col field-text">
                                                        <h4>
                                                            @if (fieldText.Config != null && !string.IsNullOrWhiteSpace(fieldText.Config.Url))
                                                            {
                                                                <a href="@fieldText.Config.Url" target="_blank" rel="noopener noreferrer">@fieldText.Config.Text</a>
                                                            }
                                                            else if (fieldText.Config != null)
                                                            {
                                                                @fieldText.Config.Text
                                                            }
                                                            else
                                                            {
                                                                @FormDataMapperService.GetTextValue(fieldText.ElementDefinition)
                                                            }
                                                        </h4>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                        <div class="modal-footer modal-footer-fixed">
                            <button class="btn btn-primary btn-submit" type="submit" disabled="@(isSubmitting)">

                                <span>Submit</span>
                            </button>
                        </div>
                    </EditForm>
                }
                else if (!isLoading)
                {
                    <div class="no-fields-message">
                        <span>No fields found for this form.</span>
                    </div>
                }
            </div>
        </div>
    </div>
}
@if (showCancelConfirm)
{
    <CancelConfirmModal OnConfirm="ConfirmCancel" OnCancel="CancelCancel" />
}