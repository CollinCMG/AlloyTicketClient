@* Toast.razor: A reusable toast notification component *@
@code {
    [Parameter] public string? Message { get; set; }
    [Parameter] public string Type { get; set; } = "success"; // "success" or "error"
    [Parameter] public bool Show { get; set; }
    [Parameter] public EventCallback OnHide { get; set; }

    private string ToastClass => $"toast-message center {(Show ? "show" : "")}" + (Type == "error" ? " error" : " success");

    private async Task HandleClose()
    {
        if (OnHide.HasDelegate)
        {
            await OnHide.InvokeAsync();
        }
    }
}

@if (Show && !string.IsNullOrWhiteSpace(Message))
{
    <div class="@ToastClass">
        <button class="toast-close" @onclick="HandleClose" aria-label="Close">&times;</button>
        @((MarkupString)Message)
    </div>
}
