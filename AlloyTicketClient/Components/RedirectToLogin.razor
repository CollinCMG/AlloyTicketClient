@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

<AuthorizeView>
    <NotAuthorized>
        
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool _navigated = false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_navigated)
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            if (!authState.User.Identity?.IsAuthenticated ?? true)
            {
                _navigated = true;
                var returnUrl = Uri.EscapeDataString(Navigation.Uri);
                Navigation.NavigateTo($"{Navigation.BaseUri}Account/Login?returnUrl={returnUrl}", true); // Triggers OpenID login with returnUrl
            }
        }
    }
}
